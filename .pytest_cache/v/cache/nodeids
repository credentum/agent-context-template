[
  "tests/test_agent_state_machines.py::TestAgentStateValidation::test_state_transition_rules",
  "tests/test_agent_state_machines.py::TestAgentStateValidation::test_valid_agent_states",
  "tests/test_agent_state_machines.py::TestSprintUpdaterStateMachine::test_blocked_task_handling",
  "tests/test_agent_state_machines.py::TestSprintUpdaterStateMachine::test_concurrent_phase_management",
  "tests/test_agent_state_machines.py::TestSprintUpdaterStateMachine::test_match_task_to_issue",
  "tests/test_agent_state_machines.py::TestSprintUpdaterStateMachine::test_phase_status_auto_update",
  "tests/test_agent_state_machines.py::TestSprintUpdaterStateMachine::test_sprint_status_progression",
  "tests/test_agent_state_machines.py::TestSprintUpdaterStateMachine::test_state_transitions_in_progress_to_completed",
  "tests/test_agent_state_machines.py::TestSprintUpdaterStateMachine::test_state_transitions_pending_to_in_progress",
  "tests/test_agent_state_machines.py::TestSprintUpdaterStateMachine::test_task_status_validation",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_arc_reviewer_approval_parsing",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_auto_merge_readiness_calculation",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_backwards_compatibility",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_ci_status_validation",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_comprehensive_logging_and_reporting",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_conflict_detection_logic",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_enhanced_context_gathering",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_error_handling_scenarios",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_github_cli_auto_merge_command",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_label_auto_merge_detection",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_text_search_auto_merge_detection",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_workflow_event_handling",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_workflow_performance_improvements",
  "tests/test_ai_pr_monitor_integration.py::TestAIPRMonitorIntegration::test_yaml_metadata_auto_merge_detection",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_check_code_quality_fail",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_check_code_quality_pass",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_check_context_integrity_missing_schema",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_check_context_integrity_valid",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_check_coverage_no_json",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_check_coverage_with_json",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_check_security_no_secrets",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_check_security_with_secrets",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_check_test_coverage_specific_validators",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_format_yaml_output",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_get_changed_files_failure",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_get_changed_files_success",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_init_default",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_init_verbose",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_load_coverage_config_fallback",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_load_coverage_config_success",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_main_function",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_review_and_output",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_review_pr_approve",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_review_pr_request_changes",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_run_command_failure",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_run_command_success",
  "tests/test_arc_reviewer.py::TestARCReviewer::test_run_command_timeout",
  "tests/test_auto_merge_output_fix.py::TestAutoMergeOutputFix::test_boolean_extraction_logic",
  "tests/test_auto_merge_output_fix.py::TestAutoMergeOutputFix::test_complex_json_object_handling",
  "tests/test_auto_merge_output_fix.py::TestAutoMergeOutputFix::test_github_actions_output_format_validation",
  "tests/test_auto_merge_output_fix.py::TestAutoMergeOutputFix::test_shell_artifact_cleaning",
  "tests/test_auto_merge_output_fix.py::TestAutoMergeOutputFix::test_yaml_parsing_after_cleaning",
  "tests/test_base_component.py::TestBaseComponent::test_close_method",
  "tests/test_base_component.py::TestBaseComponent::test_context_manager_success",
  "tests/test_base_component.py::TestBaseComponent::test_context_manager_with_exception",
  "tests/test_base_component.py::TestBaseComponent::test_init_with_invalid_yaml",
  "tests/test_base_component.py::TestBaseComponent::test_init_with_missing_config",
  "tests/test_base_component.py::TestBaseComponent::test_init_with_valid_config",
  "tests/test_base_component.py::TestBaseComponent::test_log_error_basic",
  "tests/test_base_component.py::TestBaseComponent::test_log_error_with_exception",
  "tests/test_base_component.py::TestBaseComponent::test_log_info",
  "tests/test_base_component.py::TestBaseComponent::test_log_success",
  "tests/test_base_component.py::TestBaseComponent::test_log_warning",
  "tests/test_base_component.py::TestBaseComponent::test_production_config_validation",
  "tests/test_base_component.py::TestBaseComponent::test_verbose_logging",
  "tests/test_base_component.py::TestDatabaseComponent::test_ensure_connected_when_connected",
  "tests/test_base_component.py::TestDatabaseComponent::test_ensure_connected_when_not_connected",
  "tests/test_base_component.py::TestDatabaseComponent::test_init",
  "tests/test_base_component.py::TestDatabaseComponent::test_validate_production_config_no_service_name",
  "tests/test_base_component.py::TestDatabaseComponent::test_validate_production_config_service_not_in_config",
  "tests/test_base_component.py::TestDatabaseComponent::test_validate_production_config_ssl_disabled",
  "tests/test_base_component.py::TestDatabaseComponent::test_validate_production_config_ssl_enabled",
  "tests/test_benchmarks.py::TestConcurrencyBenchmarks::test_concurrent_hash_cache_benchmark",
  "tests/test_benchmarks.py::TestPerformanceBenchmarks::test_document_embedding_benchmark",
  "tests/test_benchmarks.py::TestPerformanceBenchmarks::test_embedding_hash_benchmark",
  "tests/test_benchmarks.py::TestPerformanceBenchmarks::test_hash_computation_benchmark",
  "tests/test_benchmarks.py::TestPerformanceBenchmarks::test_metric_sanitization_benchmark",
  "tests/test_benchmarks.py::TestPerformanceBenchmarks::test_redis_key_validation_benchmark",
  "tests/test_benchmarks.py::TestPerformanceBenchmarks::test_yaml_parsing_benchmark",
  "tests/test_bidirectional_sync.py::TestBidirectionalWorkflow::test_bidirectional_sync_readiness",
  "tests/test_bidirectional_sync.py::TestBidirectionalWorkflow::test_github_issue_exists_and_open",
  "tests/test_bidirectional_sync.py::TestBidirectionalWorkflow::test_issue_labels_match_task_labels",
  "tests/test_bidirectional_sync.py::TestBidirectionalWorkflow::test_sync_command_recognizes_linked_task",
  "tests/test_bidirectional_sync.py::TestBidirectionalWorkflow::test_validate_test_scenarios_structure",
  "tests/test_bidirectional_sync.py::TestBidirectionalWorkflow::test_yaml_to_github_link_exists",
  "tests/test_bidirectional_workflow.py::BidirectionalWorkflowTest::test_baseline_verification",
  "tests/test_bidirectional_workflow.py::BidirectionalWorkflowTest::test_full_workflow_integration",
  "tests/test_bidirectional_workflow.py::BidirectionalWorkflowTest::test_github_to_yaml_sync",
  "tests/test_bidirectional_workflow.py::BidirectionalWorkflowTest::test_label_synchronization",
  "tests/test_bidirectional_workflow.py::BidirectionalWorkflowTest::test_task_removal_orphan_handling",
  "tests/test_bidirectional_workflow.py::BidirectionalWorkflowTest::test_yaml_to_github_sync",
  "tests/test_bidirectional_workflow_mocked.py::MockedBidirectionalWorkflowTest::test_baseline_verification",
  "tests/test_bidirectional_workflow_mocked.py::MockedBidirectionalWorkflowTest::test_full_workflow_integration",
  "tests/test_bidirectional_workflow_mocked.py::MockedBidirectionalWorkflowTest::test_github_to_yaml_sync",
  "tests/test_bidirectional_workflow_mocked.py::MockedBidirectionalWorkflowTest::test_label_synchronization",
  "tests/test_bidirectional_workflow_mocked.py::MockedBidirectionalWorkflowTest::test_task_removal_orphan_handling",
  "tests/test_bidirectional_workflow_mocked.py::MockedBidirectionalWorkflowTest::test_yaml_to_github_sync",
  "tests/test_chaos_engineering.py::TestDataCorruption::test_partial_write_recovery",
  "tests/test_chaos_engineering.py::TestDataCorruption::test_yaml_corruption_handling",
  "tests/test_chaos_engineering.py::TestFileSystemChaos::test_concurrent_file_access",
  "tests/test_chaos_engineering.py::TestFileSystemChaos::test_disk_full_simulation",
  "tests/test_chaos_engineering.py::TestFileSystemChaos::test_permission_denied_handling",
  "tests/test_chaos_engineering.py::TestLongRunningChaos::test_sustained_load_with_failures",
  "tests/test_chaos_engineering.py::TestNetworkChaos::test_intermittent_network_failures",
  "tests/test_chaos_engineering.py::TestNetworkChaos::test_network_timeout_handling",
  "tests/test_chaos_engineering.py::TestResourceExhaustion::test_memory_leak_detection",
  "tests/test_chaos_engineering.py::TestResourceExhaustion::test_thread_pool_exhaustion",
  "tests/test_chaos_engineering.py::TestSystemResilience::test_cascading_failure_prevention",
  "tests/test_chaos_engineering.py::TestSystemResilience::test_chaos_monkey_integration",
  "tests/test_ci_signing.py::TestCISigning::test_sign_results",
  "tests/test_ci_signing.py::TestCISigning::test_sign_results_data_helper",
  "tests/test_ci_signing.py::TestCISigning::test_verify_signature",
  "tests/test_ci_signing.py::TestCIVerification::test_require_signature_config",
  "tests/test_ci_signing.py::TestCIVerification::test_verify_signed_results",
  "tests/test_ci_signing.py::TestCIVerification::test_verify_unsigned_results",
  "tests/test_ci_signing.py::TestCIVerification::test_verify_wrapped_results",
  "tests/test_ci_signing.py::TestEdgeCases::test_empty_results",
  "tests/test_ci_signing.py::TestEdgeCases::test_invalid_signature_format",
  "tests/test_ci_signing.py::TestEdgeCases::test_malformed_results",
  "tests/test_ci_signing.py::TestEdgeCases::test_missing_public_key",
  "tests/test_ci_signing.py::TestPerformance::test_signing_performance",
  "tests/test_ci_signing.py::TestPerformance::test_verification_performance",
  "tests/test_ci_signing.py::TestRetryLogic::test_result_cache",
  "tests/test_ci_signing.py::TestRetryLogic::test_retry_on_failure",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_all_command_quick_mode",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_all_commands_produce_valid_json",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_check_command_file_not_found",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_check_command_file_not_found_within_project",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_check_command_missing_file_argument",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_check_command_pretty_output",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_check_command_success_path",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_comprehensive_mode",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_dependency_scripts_detection",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_duration_calculation",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_error_message_structure",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_fix_flag",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_help_command",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_invalid_command",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_json_output_format",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_json_validation_robustness",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_no_command_shows_help",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_path_validation_security",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_pre_commit_command_basic",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_script_exists_and_executable",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_success_path_integration_with_real_files",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_test_command_basic",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_unknown_option",
  "tests/test_claude_ci.py::TestClaudeCICommandHub::test_verbose_flag",
  "tests/test_claude_ci.py::TestClaudeCIIntegration::test_command_delegation",
  "tests/test_claude_ci.py::TestClaudeCIIntegration::test_integration_with_existing_scripts",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_edge_cases",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_error_conditions",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_fix_mode",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_help_option",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_integration_with_real_pre_commit",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_json_output_all_pass",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_log_file_creation",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_malformed_json_handling",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_parse_black_failure_output",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_parse_flake8_failure_output",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_parse_isort_failure_output",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_parse_mypy_failure_output",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_pre_commit_not_installed",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_recommendation_generation",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_script_exists",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_specific_files",
  "tests/test_claude_pre_commit.py::TestClaudePreCommit::test_text_output_format",
  "tests/test_claude_pre_commit.py::TestPreCommitHook::test_hook_exists",
  "tests/test_claude_pre_commit.py::TestPreCommitHook::test_hook_exports_functions",
  "tests/test_claude_pre_commit.py::TestPreCommitHook::test_hook_functions_defined",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_archive_document",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_archive_document_dry_run",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_archive_with_metadata",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_clean_logs",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_handle_yaml_error",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_init_with_defaults",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_load_config_file_not_found",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_log_action",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_process_context_files",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_run_method",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_should_archive_expired",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_should_archive_retention_policy",
  "tests/test_cleanup_agent_coverage.py::TestCleanupAgentCoverage::test_write_cleanup_log",
  "tests/test_config_parser.py::TestConfigParser::test_agent_configuration",
  "tests/test_config_parser.py::TestConfigParser::test_evaluation_thresholds",
  "tests/test_config_parser.py::TestConfigParser::test_mcp_configuration",
  "tests/test_config_parser.py::TestConfigParser::test_missing_required_sections",
  "tests/test_config_parser.py::TestConfigParser::test_qdrant_version_validation",
  "tests/test_config_parser.py::TestConfigParser::test_security_configuration",
  "tests/test_config_parser.py::TestConfigParser::test_valid_config",
  "tests/test_config_validator.py::TestCLI::test_cli_custom_performance_config",
  "tests/test_config_validator.py::TestCLI::test_cli_strict_mode",
  "tests/test_config_validator.py::TestCLI::test_cli_valid_config",
  "tests/test_config_validator.py::TestCLI::test_cli_with_errors",
  "tests/test_config_validator.py::TestCLI::test_cli_with_warnings",
  "tests/test_config_validator.py::TestConfigValidator::test_duckdb_configuration",
  "tests/test_config_validator.py::TestConfigValidator::test_graph_db_connection_pool",
  "tests/test_config_validator.py::TestConfigValidator::test_graph_db_query_settings",
  "tests/test_config_validator.py::TestConfigValidator::test_invalid_neo4j_port",
  "tests/test_config_validator.py::TestConfigValidator::test_invalid_qdrant_port",
  "tests/test_config_validator.py::TestConfigValidator::test_invalid_yaml",
  "tests/test_config_validator.py::TestConfigValidator::test_kv_store_duckdb_validation",
  "tests/test_config_validator.py::TestConfigValidator::test_kv_store_redis_validation",
  "tests/test_config_validator.py::TestConfigValidator::test_missing_config_file",
  "tests/test_config_validator.py::TestConfigValidator::test_missing_required_sections",
  "tests/test_config_validator.py::TestConfigValidator::test_performance_config_invalid_yaml",
  "tests/test_config_validator.py::TestConfigValidator::test_performance_config_missing",
  "tests/test_config_validator.py::TestConfigValidator::test_redis_configuration",
  "tests/test_config_validator.py::TestConfigValidator::test_resources_validation",
  "tests/test_config_validator.py::TestConfigValidator::test_search_ranking_validation",
  "tests/test_config_validator.py::TestConfigValidator::test_ssl_warnings",
  "tests/test_config_validator.py::TestConfigValidator::test_type_boosts_validation",
  "tests/test_config_validator.py::TestConfigValidator::test_valid_main_config",
  "tests/test_config_validator.py::TestConfigValidator::test_validate_all",
  "tests/test_config_validator.py::TestConfigValidator::test_vector_db_embedding_validation",
  "tests/test_config_validator.py::TestConfigValidator::test_vector_db_search_validation",
  "tests/test_context_analytics.py::TestAnalyticsReport::test_analytics_report_creation",
  "tests/test_context_analytics.py::TestCLI::test_cli_analyze_all",
  "tests/test_context_analytics.py::TestCLI::test_cli_analyze_connection_error",
  "tests/test_context_analytics.py::TestCLI::test_cli_analyze_document",
  "tests/test_context_analytics.py::TestCLI::test_cli_export",
  "tests/test_context_analytics.py::TestCLI::test_cli_export_connection_error",
  "tests/test_context_analytics.py::TestCLI::test_cli_main",
  "tests/test_context_analytics.py::TestContextAnalytics::test_analyze_agent_performance_no_data",
  "tests/test_context_analytics.py::TestContextAnalytics::test_analyze_agent_performance_with_data",
  "tests/test_context_analytics.py::TestContextAnalytics::test_analyze_document_lifecycle_exception",
  "tests/test_context_analytics.py::TestContextAnalytics::test_analyze_document_lifecycle_no_connection",
  "tests/test_context_analytics.py::TestContextAnalytics::test_analyze_document_lifecycle_with_data",
  "tests/test_context_analytics.py::TestContextAnalytics::test_analyze_system_health_with_data",
  "tests/test_context_analytics.py::TestContextAnalytics::test_export_analytics_data_csv",
  "tests/test_context_analytics.py::TestContextAnalytics::test_export_analytics_data_invalid_format",
  "tests/test_context_analytics.py::TestContextAnalytics::test_export_analytics_data_parquet",
  "tests/test_context_analytics.py::TestContextAnalytics::test_generate_executive_summary",
  "tests/test_context_analytics.py::TestContextAnalytics::test_init",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_connect_redis",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_connection_methods",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_context_kv_close",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_context_kv_connect",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_context_kv_recent_activity",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_context_kv_record_event",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_duckdb_analytics",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_ensure_connected_success",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_environment_detection",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_init",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_logging_methods",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_performance_config",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_record_event",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_redis_cache_operations",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_redis_error_handling",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_redis_lock_operations",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_redis_operations",
  "tests/test_context_kv_coverage.py::TestContextKVCoverage::test_redis_session_operations",
  "tests/test_context_kv_coverage.py::TestRedisConnectorCoverage::test_close",
  "tests/test_context_kv_coverage.py::TestRedisConnectorCoverage::test_connect_failure",
  "tests/test_context_kv_coverage.py::TestRedisConnectorCoverage::test_connect_success",
  "tests/test_context_kv_coverage.py::TestRedisConnectorCoverage::test_connect_with_password",
  "tests/test_context_kv_coverage.py::TestRedisConnectorCoverage::test_ensure_connected",
  "tests/test_context_kv_coverage.py::TestRedisConnectorCoverage::test_init_with_config",
  "tests/test_context_kv_coverage.py::TestRedisConnectorCoverage::test_init_without_config",
  "tests/test_context_kv_methods.py::TestContextKVIntegration::test_connect_success",
  "tests/test_context_kv_methods.py::TestContextKVIntegration::test_record_event",
  "tests/test_context_kv_methods.py::TestRedisConnectorMethods::test_get_cache_success",
  "tests/test_context_kv_methods.py::TestRedisConnectorMethods::test_get_prefixed_key",
  "tests/test_context_kv_methods.py::TestRedisConnectorMethods::test_get_session_success",
  "tests/test_context_kv_methods.py::TestRedisConnectorMethods::test_record_metric_success",
  "tests/test_context_kv_methods.py::TestRedisConnectorMethods::test_set_cache_success",
  "tests/test_context_kv_methods.py::TestRedisConnectorMethods::test_set_session_success",
  "tests/test_context_lint.py::TestContextLint::test_auto_fix_timestamps",
  "tests/test_context_lint.py::TestContextLint::test_expiration_warning",
  "tests/test_context_lint.py::TestContextLint::test_invalid_schema_version",
  "tests/test_context_lint.py::TestContextLint::test_missing_required_field",
  "tests/test_context_lint.py::TestContextLint::test_valid_design_document",
  "tests/test_context_lint.py::TestContextLint::test_validate_sprint_document",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_check_warnings_old_document",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_cli_check_config_command",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_cli_check_config_missing",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_cli_stats_command",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_cli_stats_no_documents",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_cli_validate_directory",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_cli_validate_single_file",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_cli_validate_verbose",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_cli_validate_with_errors",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_cli_validate_with_fix",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_cli_validate_with_warnings",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_config_loading_file_not_found",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_config_loading_invalid_yaml",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_config_loading_io_error",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_config_loading_non_dict",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_schema_cache",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_validate_batch_all_valid",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_validate_batch_mixed_results",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_validate_directory",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_validate_directory_recursive",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_validate_file_empty_file",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_validate_file_general_exception",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_validate_file_missing_document_type",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_validate_file_unknown_document_type",
  "tests/test_context_lint_coverage.py::TestContextLintCoverage::test_validate_file_yaml_error",
  "tests/test_core_utils_comprehensive.py::TestGetEnvironment::test_default_development",
  "tests/test_core_utils_comprehensive.py::TestGetEnvironment::test_development_variations",
  "tests/test_core_utils_comprehensive.py::TestGetEnvironment::test_env_variable_fallback",
  "tests/test_core_utils_comprehensive.py::TestGetEnvironment::test_environment_variable",
  "tests/test_core_utils_comprehensive.py::TestGetEnvironment::test_node_env_fallback",
  "tests/test_core_utils_comprehensive.py::TestGetEnvironment::test_production_variations",
  "tests/test_core_utils_comprehensive.py::TestGetEnvironment::test_staging_variations",
  "tests/test_core_utils_comprehensive.py::TestGetSecureConnectionConfig::test_basic_config_development",
  "tests/test_core_utils_comprehensive.py::TestGetSecureConnectionConfig::test_basic_config_production",
  "tests/test_core_utils_comprehensive.py::TestGetSecureConnectionConfig::test_custom_ssl_settings",
  "tests/test_core_utils_comprehensive.py::TestGetSecureConnectionConfig::test_default_port_handling",
  "tests/test_core_utils_comprehensive.py::TestGetSecureConnectionConfig::test_missing_service_config",
  "tests/test_core_utils_comprehensive.py::TestGetSecureConnectionConfig::test_partial_ssl_cert_config",
  "tests/test_core_utils_comprehensive.py::TestGetSecureConnectionConfig::test_production_ssl_disabled_warning",
  "tests/test_core_utils_comprehensive.py::TestGetSecureConnectionConfig::test_ssl_certificate_paths",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_authorization_basic_patterns",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_authorization_bearer_patterns",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_base64_encoded_values",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_basic_token_patterns",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_bearer_token_patterns",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_bolt_protocol_patterns",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_case_insensitive_patterns",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_connection_string_patterns",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_custom_sensitive_values",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_database_protocol_patterns",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_empty_message",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_invalid_base64_handling",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_json_password_patterns",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_no_sensitive_values",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_password_key_patterns",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_skip_short_sensitive_values",
  "tests/test_core_utils_comprehensive.py::TestSanitizeErrorMessage::test_url_encoded_values",
  "tests/test_directory_structure.py::TestDirectoryStructure::test_config_file_exists",
  "tests/test_directory_structure.py::TestDirectoryStructure::test_context_directory_exists",
  "tests/test_directory_structure.py::TestDirectoryStructure::test_documentation_files",
  "tests/test_directory_structure.py::TestDirectoryStructure::test_executable_scripts",
  "tests/test_directory_structure.py::TestDirectoryStructure::test_github_workflows",
  "tests/test_directory_structure.py::TestDirectoryStructure::test_gitignore_entries",
  "tests/test_directory_structure.py::TestDirectoryStructure::test_log_subdirectories",
  "tests/test_directory_structure.py::TestDirectoryStructure::test_required_subdirectories",
  "tests/test_directory_structure.py::TestDirectoryStructure::test_sample_documents",
  "tests/test_directory_structure.py::TestDirectoryStructure::test_schema_files_exist",
  "tests/test_directory_structure.py::TestDirectoryStructure::test_src_directory_structure",
  "tests/test_e2e.py::TestEndToEnd::test_config_validation_workflow",
  "tests/test_e2e.py::TestEndToEnd::test_error_recovery_workflow",
  "tests/test_e2e.py::TestEndToEnd::test_github_actions_workflow_simulation",
  "tests/test_e2e.py::TestEndToEnd::test_lint_and_cleanup_workflow",
  "tests/test_e2e.py::TestEndToEnd::test_performance_config_workflow",
  "tests/test_e2e.py::TestEndToEnd::test_sprint_update_workflow",
  "tests/test_e2e.py::TestEndToEnd::test_vector_graph_workflow",
  "tests/test_e2e.py::TestPerformanceE2E::test_large_dataset_processing",
  "tests/test_e2e_project_lifecycle.py::TestErrorRecovery::test_corrupted_document_handling",
  "tests/test_e2e_project_lifecycle.py::TestErrorRecovery::test_missing_configuration_fallback",
  "tests/test_e2e_project_lifecycle.py::TestProjectLifecycle::test_agent_execution_sequence",
  "tests/test_e2e_project_lifecycle.py::TestProjectLifecycle::test_document_integrity_check",
  "tests/test_e2e_project_lifecycle.py::TestProjectLifecycle::test_full_project_lifecycle",
  "tests/test_e2e_project_lifecycle.py::TestProjectLifecycle::test_project_clone_and_setup",
  "tests/test_e2e_project_lifecycle.py::TestSnapshotVerification::test_snapshot_comparison",
  "tests/test_e2e_project_lifecycle.py::TestSnapshotVerification::test_snapshot_format",
  "tests/test_edge_cases.py::TestBoundaryConditions::test_binary_file_handling",
  "tests/test_edge_cases.py::TestBoundaryConditions::test_concurrent_file_access",
  "tests/test_edge_cases.py::TestBoundaryConditions::test_empty_file_handling",
  "tests/test_edge_cases.py::TestBoundaryConditions::test_huge_file_handling",
  "tests/test_edge_cases.py::TestBoundaryConditions::test_special_characters_in_paths",
  "tests/test_edge_cases.py::TestConcurrencyAndRaceConditions::test_concurrent_hash_cache_access",
  "tests/test_edge_cases.py::TestConcurrencyAndRaceConditions::test_file_lock_contention",
  "tests/test_edge_cases.py::TestErrorRecovery::test_disk_full_handling",
  "tests/test_edge_cases.py::TestErrorRecovery::test_invalid_json_recovery",
  "tests/test_edge_cases.py::TestErrorRecovery::test_network_timeout_handling",
  "tests/test_edge_cases.py::TestErrorRecovery::test_partial_write_recovery",
  "tests/test_edge_cases.py::TestPerformanceEdgeCases::test_cache_overflow_handling",
  "tests/test_edge_cases.py::TestPerformanceEdgeCases::test_memory_efficient_large_data",
  "tests/test_edge_cases.py::TestSecurityEdgeCases::test_injection_prevention",
  "tests/test_edge_cases.py::TestSecurityEdgeCases::test_path_traversal_prevention",
  "tests/test_edge_cases.py::TestValidationEdgeCases::test_validate_metric_name_edge_cases",
  "tests/test_edge_cases.py::TestValidationEdgeCases::test_validate_redis_key_edge_cases",
  "tests/test_edge_cases.py::TestValidationEdgeCases::test_validate_time_range_edge_cases",
  "tests/test_formatting_scripts.py::TestClaudePostEdit::test_exit_codes",
  "tests/test_formatting_scripts.py::TestClaudePostEdit::test_fix_mode_flag",
  "tests/test_formatting_scripts.py::TestClaudePostEdit::test_log_file_creation",
  "tests/test_formatting_scripts.py::TestClaudePostEdit::test_multiple_file_validation",
  "tests/test_formatting_scripts.py::TestClaudePostEdit::test_script_exists_and_executable",
  "tests/test_formatting_scripts.py::TestClaudePostEdit::test_summary_output",
  "tests/test_formatting_scripts.py::TestFormatterIntegration::test_black_integration",
  "tests/test_formatting_scripts.py::TestFormatterIntegration::test_flake8_integration",
  "tests/test_formatting_scripts.py::TestFormatterIntegration::test_isort_integration",
  "tests/test_formatting_scripts.py::TestPerformance::test_validation_under_2_seconds",
  "tests/test_formatting_scripts.py::TestPostEditHook::test_hook_exists_and_executable",
  "tests/test_formatting_scripts.py::TestPostEditHook::test_hook_functions_available",
  "tests/test_formatting_scripts.py::TestPostEditHook::test_hook_usage_message",
  "tests/test_formatting_scripts.py::TestValidateFileFormat::test_auto_fix_mode",
  "tests/test_formatting_scripts.py::TestValidateFileFormat::test_nonexistent_file",
  "tests/test_formatting_scripts.py::TestValidateFileFormat::test_python_file_needs_formatting",
  "tests/test_formatting_scripts.py::TestValidateFileFormat::test_python_file_well_formatted",
  "tests/test_formatting_scripts.py::TestValidateFileFormat::test_script_exists_and_executable",
  "tests/test_formatting_scripts.py::TestValidateFileFormat::test_structured_output_format",
  "tests/test_formatting_scripts.py::TestValidateFileFormat::test_yaml_file_validation",
  "tests/test_generate_coverage_matrix.py::TestCommandLineArgs::test_parse_args_custom",
  "tests/test_generate_coverage_matrix.py::TestCommandLineArgs::test_parse_args_defaults",
  "tests/test_generate_coverage_matrix.py::TestCoverageAnalyzer::test_extract_tests_for_file",
  "tests/test_generate_coverage_matrix.py::TestCoverageAnalyzer::test_load_coverage_summary_missing_file",
  "tests/test_generate_coverage_matrix.py::TestCoverageAnalyzer::test_load_coverage_summary_valid",
  "tests/test_generate_coverage_matrix.py::TestCoverageAnalyzer::test_parse_coverage_json_file_not_exists",
  "tests/test_generate_coverage_matrix.py::TestCoverageAnalyzer::test_run_coverage_tests_success",
  "tests/test_generate_coverage_matrix.py::TestCoverageAnalyzer::test_run_coverage_tests_timeout",
  "tests/test_generate_coverage_matrix.py::TestCoverageDataValidator::test_validate_coverage_json_missing_files",
  "tests/test_generate_coverage_matrix.py::TestCoverageDataValidator::test_validate_coverage_json_valid",
  "tests/test_generate_coverage_matrix.py::TestCoverageDataValidator::test_validate_summary_missing_overall",
  "tests/test_generate_coverage_matrix.py::TestCoverageDataValidator::test_validate_summary_not_dict",
  "tests/test_generate_coverage_matrix.py::TestCoverageDataValidator::test_validate_summary_valid",
  "tests/test_generate_coverage_matrix.py::TestCoverageMatrixGenerator::test_generate_error_handling",
  "tests/test_generate_coverage_matrix.py::TestCoverageMatrixGenerator::test_generate_html_report_success",
  "tests/test_generate_coverage_matrix.py::TestCoverageMatrixGenerator::test_generate_markdown_report_success",
  "tests/test_generate_coverage_matrix.py::TestCoverageMatrixGenerator::test_update_gitignore",
  "tests/test_generate_coverage_matrix.py::TestReportGenerator::test_collect_all_modules",
  "tests/test_generate_coverage_matrix.py::TestReportGenerator::test_generate_html_metrics",
  "tests/test_generate_coverage_matrix.py::TestReportGenerator::test_generate_html_styles",
  "tests/test_generate_coverage_matrix.py::TestReportGenerator::test_generate_html_table_row",
  "tests/test_generate_coverage_matrix.py::TestReportGenerator::test_generate_html_table_row_no_tests",
  "tests/test_generate_coverage_matrix.py::TestReportGenerator::test_generate_markdown",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_cleanup_orphaned_nodes",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_cleanup_orphaned_nodes_exception",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_cleanup_orphaned_nodes_no_driver",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_close_with_driver",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_close_without_driver",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_compute_doc_hash",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_connect_failure",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_connect_no_password",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_connect_success",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_context_manager",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_context_manager_with_exception",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_create_document_node_basic",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_create_document_node_decision",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_create_document_node_sprint",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_create_relationships_decision",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_create_relationships_graph_metadata",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_create_relationships_sprint",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_extract_references",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_get_statistics",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_get_statistics_exception",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_get_statistics_no_driver",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_init_with_default_config",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_init_with_io_error",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_load_config_non_dict",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_load_processed_cache_exists",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_load_processed_cache_invalid_json",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_load_processed_cache_not_dict",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_main_cleanup",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_main_connect_failure",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_main_process_directory",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_main_process_file",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_main_stats",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_main_with_force_and_verbose",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_process_directory",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_process_directory_with_cache_save",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_process_document_cached",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_process_document_empty_file",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_process_document_exception",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_process_document_force",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_process_document_no_driver",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_process_document_with_references",
  "tests/test_graph_builder_coverage.py::TestGraphBuilderCoverage::test_save_processed_cache",
  "tests/test_graph_db.py::TestGraphBuilder::test_compute_doc_hash",
  "tests/test_graph_db.py::TestGraphBuilder::test_create_document_node",
  "tests/test_graph_db.py::TestGraphBuilder::test_extract_references",
  "tests/test_graph_db.py::TestGraphBuilder::test_process_document",
  "tests/test_graph_db.py::TestGraphRAGIntegration::test_analyze_document_impact",
  "tests/test_graph_db.py::TestGraphRAGIntegration::test_extract_reasoning_path",
  "tests/test_graph_db.py::TestGraphRAGIntegration::test_search",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_close_with_driver",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_close_without_driver",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_connect_auth_error",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_connect_error_sanitization",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_connect_generic_error",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_connect_prompt_for_password",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_connect_service_unavailable",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_connect_session_test_failure",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_connect_ssl_enabled",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_connect_success",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_create_constraints",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_create_constraints_error",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_create_constraints_no_driver",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_create_indexes_error",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_create_indexes_existing_index",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_create_indexes_no_driver",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_create_indexes_partial_failure",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_create_indexes_success",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_load_config",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_load_config_file_not_found",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_load_config_invalid_yaml",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_load_config_non_dict",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_main_success_with_skips",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_setup_graph_schema",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_setup_graph_schema_error",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_setup_graph_schema_no_driver",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_verify_setup_complete_failure",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_verify_setup_fallback_failure",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_verify_setup_fallback_no_records",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_verify_setup_fallback_query",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_verify_setup_no_driver",
  "tests/test_graph_db.py::TestNeo4jInitializer::test_verify_setup_with_apoc",
  "tests/test_hash_diff_embedder.py::TestEmbeddingErrorScenarios::test_concurrent_embedding_safety",
  "tests/test_hash_diff_embedder.py::TestEmbeddingErrorScenarios::test_corrupted_document_handling",
  "tests/test_hash_diff_embedder.py::TestEmbeddingErrorScenarios::test_empty_document_handling",
  "tests/test_hash_diff_embedder.py::TestEmbeddingErrorScenarios::test_file_permission_error",
  "tests/test_hash_diff_embedder.py::TestEmbeddingErrorScenarios::test_large_document_handling",
  "tests/test_hash_diff_embedder.py::TestEmbeddingErrorScenarios::test_openai_rate_limit_handling",
  "tests/test_hash_diff_embedder.py::TestEmbeddingErrorScenarios::test_qdrant_connection_failure",
  "tests/test_hash_diff_embedder.py::TestErrorHandling::test_compute_content_hash_with_empty_string",
  "tests/test_hash_diff_embedder.py::TestErrorHandling::test_compute_content_hash_with_none",
  "tests/test_hash_diff_embedder.py::TestErrorHandling::test_compute_content_hash_with_unicode",
  "tests/test_hash_diff_embedder.py::TestErrorHandling::test_compute_embedding_hash_with_empty_list",
  "tests/test_hash_diff_embedder.py::TestErrorHandling::test_compute_embedding_hash_with_invalid_types",
  "tests/test_hash_diff_embedder.py::TestErrorHandling::test_connect_with_timeout",
  "tests/test_hash_diff_embedder.py::TestErrorHandling::test_document_hash_with_invalid_data",
  "tests/test_hash_diff_embedder.py::TestErrorHandling::test_load_config_with_malformed_yaml",
  "tests/test_hash_diff_embedder.py::TestErrorHandling::test_load_hash_cache_with_corrupted_file",
  "tests/test_hash_diff_embedder.py::TestErrorHandling::test_save_hash_cache_with_permission_error",
  "tests/test_hash_diff_embedder.py::TestHashDiffEmbedder::test_compute_content_hash",
  "tests/test_hash_diff_embedder.py::TestHashDiffEmbedder::test_compute_embedding_hash",
  "tests/test_hash_diff_embedder.py::TestHashDiffEmbedder::test_connect_success",
  "tests/test_hash_diff_embedder.py::TestHashDiffEmbedder::test_document_hash_dataclass",
  "tests/test_hash_diff_embedder.py::TestHashDiffEmbedder::test_load_config_empty_yaml",
  "tests/test_hash_diff_embedder.py::TestHashDiffEmbedder::test_load_config_file_not_found",
  "tests/test_hash_diff_embedder.py::TestHashDiffEmbedder::test_load_config_success",
  "tests/test_hash_diff_embedder.py::TestHashDiffEmbedder::test_load_hash_cache_invalid_json",
  "tests/test_hash_diff_embedder.py::TestHashDiffEmbedder::test_load_hash_cache_no_file",
  "tests/test_hash_diff_embedder.py::TestHashDiffEmbedder::test_load_hash_cache_success",
  "tests/test_hash_diff_embedder.py::TestHashDiffEmbedder::test_save_hash_cache",
  "tests/test_hash_diff_embedder.py::TestYAMLParsing::test_safe_yaml_parsing",
  "tests/test_hash_diff_embedder.py::TestYAMLParsing::test_yaml_parsing_empty_content",
  "tests/test_hash_diff_embedder.py::TestYAMLParsing::test_yaml_parsing_invalid_content",
  "tests/test_hash_diff_embedder_async.py::TestAsyncConnection::test_connect_no_openai_key",
  "tests/test_hash_diff_embedder_async.py::TestAsyncConnection::test_connect_qdrant_failure",
  "tests/test_hash_diff_embedder_async.py::TestAsyncConnection::test_connect_qdrant_get_collections_failure",
  "tests/test_hash_diff_embedder_async.py::TestAsyncConnection::test_connect_success",
  "tests/test_hash_diff_embedder_async.py::TestAsyncHashDiffEmbedder::test_init_with_custom_config",
  "tests/test_hash_diff_embedder_async.py::TestAsyncHashDiffEmbedder::test_init_with_default_paths",
  "tests/test_hash_diff_embedder_async.py::TestAsyncHashDiffEmbedder::test_load_config_file_not_found",
  "tests/test_hash_diff_embedder_async.py::TestAsyncHashDiffEmbedder::test_load_hash_cache_invalid_json",
  "tests/test_hash_diff_embedder_async.py::TestAsyncHashDiffEmbedder::test_load_hash_cache_no_file",
  "tests/test_hash_diff_embedder_async.py::TestAsyncHashDiffEmbedder::test_load_hash_cache_with_file",
  "tests/test_hash_diff_embedder_async.py::TestAsyncHashDiffEmbedder::test_load_perf_config_file_not_found",
  "tests/test_hash_diff_embedder_async.py::TestEmbedDirectory::test_embed_directory_batch_processing",
  "tests/test_hash_diff_embedder_async.py::TestEmbedDirectory::test_embed_directory_empty_yaml",
  "tests/test_hash_diff_embedder_async.py::TestEmbedDirectory::test_embed_directory_invalid_yaml",
  "tests/test_hash_diff_embedder_async.py::TestEmbedDirectory::test_embed_directory_no_yaml_files",
  "tests/test_hash_diff_embedder_async.py::TestEmbedDirectory::test_embed_directory_saves_cache",
  "tests/test_hash_diff_embedder_async.py::TestEmbedDirectory::test_embed_directory_skips_archive",
  "tests/test_hash_diff_embedder_async.py::TestEmbedDirectory::test_embed_directory_skips_schemas",
  "tests/test_hash_diff_embedder_async.py::TestEmbedDirectory::test_embed_directory_success",
  "tests/test_hash_diff_embedder_async.py::TestEmbedDirectory::test_embed_directory_with_cache_hit",
  "tests/test_hash_diff_embedder_async.py::TestEmbeddingTask::test_embedding_task_creation",
  "tests/test_hash_diff_embedder_async.py::TestEmbeddingWithRetry::test_embed_with_retry_max_retries_exceeded",
  "tests/test_hash_diff_embedder_async.py::TestEmbeddingWithRetry::test_embed_with_retry_non_rate_limit_error",
  "tests/test_hash_diff_embedder_async.py::TestEmbeddingWithRetry::test_embed_with_retry_rate_limit_success",
  "tests/test_hash_diff_embedder_async.py::TestEmbeddingWithRetry::test_embed_with_retry_success",
  "tests/test_hash_diff_embedder_async.py::TestMainFunction::test_main_function_connection_failure",
  "tests/test_hash_diff_embedder_async.py::TestMainFunction::test_main_function_success",
  "tests/test_hash_diff_embedder_async.py::TestProcessEmbeddingTask::test_process_embedding_task_failure",
  "tests/test_hash_diff_embedder_async.py::TestProcessEmbeddingTask::test_process_embedding_task_success",
  "tests/test_hash_diff_embedder_async.py::TestProcessEmbeddingTask::test_process_embedding_task_with_minimal_data",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_cleanup_orphaned_vectors",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_cleanup_orphaned_vectors_error",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_cleanup_orphaned_vectors_no_client",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_connect_missing_openai_key",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_connect_openai_failure",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_embed_directory_with_nested_files",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_embed_document_verbose_skip",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_embed_document_with_existing_vector_deletion",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_embed_document_with_rate_limit_retry",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_main_connection_failure",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_main_directory_with_cleanup",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_main_single_file",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_main_single_file_failed",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_needs_embedding_with_cached_changed_file",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_needs_embedding_with_cached_unchanged_file",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_needs_embedding_with_error",
  "tests/test_hash_diff_embedder_coverage.py::TestHashDiffEmbedderCoverage::test_needs_embedding_with_new_file",
  "tests/test_healthcheck_integration.py::TestHealthcheckIntegration::test_healthcheck_concurrent_execution",
  "tests/test_healthcheck_integration.py::TestHealthcheckIntegration::test_healthcheck_environment_variable_validation",
  "tests/test_healthcheck_integration.py::TestHealthcheckIntegration::test_healthcheck_help_command",
  "tests/test_healthcheck_integration.py::TestHealthcheckIntegration::test_healthcheck_missing_python_dependency",
  "tests/test_healthcheck_integration.py::TestHealthcheckIntegration::test_healthcheck_script_exists_and_executable",
  "tests/test_healthcheck_integration.py::TestHealthcheckIntegration::test_healthcheck_script_syntax",
  "tests/test_healthcheck_integration.py::TestHealthcheckIntegration::test_healthcheck_with_invalid_host",
  "tests/test_healthcheck_integration.py::TestHealthcheckIntegration::test_healthcheck_with_live_services",
  "tests/test_healthcheck_integration.py::TestHealthcheckIntegration::test_healthcheck_with_services_down",
  "tests/test_healthcheck_integration.py::TestHealthcheckScriptContent::test_script_has_environment_variables",
  "tests/test_healthcheck_integration.py::TestHealthcheckScriptContent::test_script_has_error_handling",
  "tests/test_healthcheck_integration.py::TestHealthcheckScriptContent::test_script_has_help_functionality",
  "tests/test_healthcheck_integration.py::TestHealthcheckScriptContent::test_script_has_proper_exit_codes",
  "tests/test_healthcheck_integration.py::TestHealthcheckScriptContent::test_script_has_proper_shebang",
  "tests/test_healthcheck_integration.py::TestHealthcheckScriptContent::test_script_has_timeout_support",
  "tests/test_healthcheck_integration.py::TestHealthcheckScriptContent::test_script_uses_proper_endpoints",
  "tests/test_integration.py::TestIntegration::test_error_handling_cascade",
  "tests/test_integration.py::TestIntegration::test_graphrag_search_integration",
  "tests/test_integration.py::TestIntegration::test_rate_limiting_retry",
  "tests/test_integration.py::TestIntegration::test_vector_graph_sync",
  "tests/test_integration_agent_flow.py::TestAgentErrorHandling::test_agent_error_trace",
  "tests/test_integration_agent_flow.py::TestAgentExecutionFlow::test_cleanup_agent_execution_flow",
  "tests/test_integration_agent_flow.py::TestAgentExecutionFlow::test_context_lint_agent_flow",
  "tests/test_integration_agent_flow.py::TestAgentExecutionFlow::test_sprint_update_agent_flow",
  "tests/test_integration_agent_flow.py::TestAgentReflectionPatterns::test_learning_from_traces",
  "tests/test_integration_agent_flow.py::TestAgentReflectionPatterns::test_reflection_structure",
  "tests/test_integration_ci_workflow.py::TestCISprintMetrics::test_burndown_tracking",
  "tests/test_integration_ci_workflow.py::TestCISprintMetrics::test_velocity_calculation",
  "tests/test_integration_ci_workflow.py::TestCIWorkflowIntegration::test_ci_failure_handling",
  "tests/test_integration_ci_workflow.py::TestCIWorkflowIntegration::test_issue_comment_triggers_update",
  "tests/test_integration_ci_workflow.py::TestCIWorkflowIntegration::test_pr_merge_updates_sprint",
  "tests/test_integration_ci_workflow.py::TestCIWorkflowIntegration::test_pr_triggers_ci_workflow",
  "tests/test_integration_ci_workflow.py::TestGitHubActionsIntegration::test_scheduled_sprint_update",
  "tests/test_integration_ci_workflow.py::TestGitHubActionsIntegration::test_workflow_dispatch_event",
  "tests/test_integration_ci_workflow.py::TestGitHubActionsIntegration::test_workflow_environment_setup",
  "tests/test_integration_embedding_flow.py::TestEmbeddingConfiguration::test_collection_configuration",
  "tests/test_integration_embedding_flow.py::TestEmbeddingConfiguration::test_embedding_model_configuration",
  "tests/test_integration_embedding_flow.py::TestEmbeddingIntegrationFlow::test_async_batch_embedding_flow",
  "tests/test_integration_embedding_flow.py::TestEmbeddingIntegrationFlow::test_concurrent_embedding_conflicts",
  "tests/test_integration_embedding_flow.py::TestEmbeddingIntegrationFlow::test_document_size_limits",
  "tests/test_integration_embedding_flow.py::TestEmbeddingIntegrationFlow::test_document_summarization_flow",
  "tests/test_integration_embedding_flow.py::TestEmbeddingIntegrationFlow::test_document_to_embedding_flow",
  "tests/test_integration_embedding_flow.py::TestEmbeddingIntegrationFlow::test_embedding_api_failure",
  "tests/test_integration_embedding_flow.py::TestEmbeddingIntegrationFlow::test_embedding_error_handling",
  "tests/test_integration_embedding_flow.py::TestEmbeddingIntegrationFlow::test_embedding_retrieval_flow",
  "tests/test_integration_embedding_flow.py::TestEmbeddingIntegrationFlow::test_incremental_embedding_update",
  "tests/test_integration_embedding_flow.py::TestEmbeddingIntegrationFlow::test_qdrant_connection_failure",
  "tests/test_integration_embedding_flow.py::TestEmbeddingMonitoring::test_embedding_metrics_collection",
  "tests/test_integration_real.py::TestGraphDBIntegration::test_graph_db_lifecycle",
  "tests/test_integration_real.py::TestGraphRAGIntegration::test_graphrag_search",
  "tests/test_integration_real.py::TestPerformanceIntegration::test_bulk_processing",
  "tests/test_integration_real.py::TestVectorDBIntegration::test_vector_db_lifecycle",
  "tests/test_kv_store.py::TestContextAnalytics::test_analyze_agent_performance",
  "tests/test_kv_store.py::TestContextAnalytics::test_analyze_document_lifecycle",
  "tests/test_kv_store.py::TestContextAnalytics::test_analyze_system_health",
  "tests/test_kv_store.py::TestContextKV::test_connect",
  "tests/test_kv_store.py::TestContextKV::test_get_recent_activity",
  "tests/test_kv_store.py::TestContextKV::test_record_event",
  "tests/test_kv_store.py::TestDuckDBAnalytics::test_aggregate_metrics",
  "tests/test_kv_store.py::TestDuckDBAnalytics::test_connect_and_initialize",
  "tests/test_kv_store.py::TestDuckDBAnalytics::test_generate_summary",
  "tests/test_kv_store.py::TestDuckDBAnalytics::test_insert_metrics",
  "tests/test_kv_store.py::TestDuckDBAnalytics::test_query_metrics",
  "tests/test_kv_store.py::TestKVStoreIntegration::test_full_workflow",
  "tests/test_kv_store.py::TestRedisConnector::test_connect_failure",
  "tests/test_kv_store.py::TestRedisConnector::test_connect_success",
  "tests/test_kv_store.py::TestRedisConnector::test_delete_cache",
  "tests/test_kv_store.py::TestRedisConnector::test_distributed_lock",
  "tests/test_kv_store.py::TestRedisConnector::test_get_cache",
  "tests/test_kv_store.py::TestRedisConnector::test_record_metric",
  "tests/test_kv_store.py::TestRedisConnector::test_session_management",
  "tests/test_kv_store.py::TestRedisConnector::test_set_cache",
  "tests/test_kv_validators.py::TestSanitizeMetricName::test_long_metric_name",
  "tests/test_kv_validators.py::TestSanitizeMetricName::test_special_characters",
  "tests/test_kv_validators.py::TestSanitizeMetricName::test_unicode_characters",
  "tests/test_kv_validators.py::TestSanitizeMetricName::test_valid_metric_name",
  "tests/test_kv_validators.py::TestValidateCacheEntry::test_invalid_key_type",
  "tests/test_kv_validators.py::TestValidateCacheEntry::test_invalid_timestamp",
  "tests/test_kv_validators.py::TestValidateCacheEntry::test_invalid_ttl_seconds",
  "tests/test_kv_validators.py::TestValidateCacheEntry::test_missing_required_fields",
  "tests/test_kv_validators.py::TestValidateCacheEntry::test_valid_cache_entry",
  "tests/test_kv_validators.py::TestValidateMetricEvent::test_invalid_metric_name_type",
  "tests/test_kv_validators.py::TestValidateMetricEvent::test_invalid_tags_type",
  "tests/test_kv_validators.py::TestValidateMetricEvent::test_invalid_timestamp_format",
  "tests/test_kv_validators.py::TestValidateMetricEvent::test_invalid_timestamp_type",
  "tests/test_kv_validators.py::TestValidateMetricEvent::test_invalid_value_type",
  "tests/test_kv_validators.py::TestValidateMetricEvent::test_missing_fields",
  "tests/test_kv_validators.py::TestValidateMetricEvent::test_valid_metric_event",
  "tests/test_kv_validators.py::TestValidateMetricEvent::test_valid_metric_with_datetime_object",
  "tests/test_kv_validators.py::TestValidateRedisKey::test_control_characters",
  "tests/test_kv_validators.py::TestValidateRedisKey::test_empty_key",
  "tests/test_kv_validators.py::TestValidateRedisKey::test_invalid_type",
  "tests/test_kv_validators.py::TestValidateRedisKey::test_key_too_long",
  "tests/test_kv_validators.py::TestValidateRedisKey::test_valid_redis_key",
  "tests/test_kv_validators.py::TestValidateSessionData::test_circular_reference",
  "tests/test_kv_validators.py::TestValidateSessionData::test_data_too_large",
  "tests/test_kv_validators.py::TestValidateSessionData::test_invalid_type",
  "tests/test_kv_validators.py::TestValidateSessionData::test_nested_valid_data",
  "tests/test_kv_validators.py::TestValidateSessionData::test_non_serializable_data",
  "tests/test_kv_validators.py::TestValidateSessionData::test_valid_session_data",
  "tests/test_kv_validators.py::TestValidateTimeRange::test_custom_max_days",
  "tests/test_kv_validators.py::TestValidateTimeRange::test_exceeds_max_days",
  "tests/test_kv_validators.py::TestValidateTimeRange::test_future_end_date",
  "tests/test_kv_validators.py::TestValidateTimeRange::test_start_after_end",
  "tests/test_kv_validators.py::TestValidateTimeRange::test_start_equals_end",
  "tests/test_kv_validators.py::TestValidateTimeRange::test_valid_time_range",
  "tests/test_kv_validators_comprehensive.py::TestSanitizeMetricName::test_empty_string",
  "tests/test_kv_validators_comprehensive.py::TestSanitizeMetricName::test_invalid_characters_replaced",
  "tests/test_kv_validators_comprehensive.py::TestSanitizeMetricName::test_length_limitation",
  "tests/test_kv_validators_comprehensive.py::TestSanitizeMetricName::test_multiple_invalid_characters",
  "tests/test_kv_validators_comprehensive.py::TestSanitizeMetricName::test_only_invalid_characters",
  "tests/test_kv_validators_comprehensive.py::TestSanitizeMetricName::test_unicode_characters",
  "tests/test_kv_validators_comprehensive.py::TestSanitizeMetricName::test_valid_metric_names",
  "tests/test_kv_validators_comprehensive.py::TestValidateCacheEntry::test_invalid_key_type",
  "tests/test_kv_validators_comprehensive.py::TestValidateCacheEntry::test_invalid_timestamp_formats",
  "tests/test_kv_validators_comprehensive.py::TestValidateCacheEntry::test_invalid_ttl_values",
  "tests/test_kv_validators_comprehensive.py::TestValidateCacheEntry::test_missing_required_fields",
  "tests/test_kv_validators_comprehensive.py::TestValidateCacheEntry::test_valid_cache_entry",
  "tests/test_kv_validators_comprehensive.py::TestValidateCacheEntry::test_valid_timestamp_formats",
  "tests/test_kv_validators_comprehensive.py::TestValidateCacheEntry::test_valid_zero_ttl",
  "tests/test_kv_validators_comprehensive.py::TestValidateMetricEvent::test_invalid_metric_name_types",
  "tests/test_kv_validators_comprehensive.py::TestValidateMetricEvent::test_invalid_tags_types",
  "tests/test_kv_validators_comprehensive.py::TestValidateMetricEvent::test_invalid_timestamp_string",
  "tests/test_kv_validators_comprehensive.py::TestValidateMetricEvent::test_invalid_timestamp_types",
  "tests/test_kv_validators_comprehensive.py::TestValidateMetricEvent::test_invalid_value_types",
  "tests/test_kv_validators_comprehensive.py::TestValidateMetricEvent::test_missing_required_fields",
  "tests/test_kv_validators_comprehensive.py::TestValidateMetricEvent::test_valid_metric_event_datetime_timestamp",
  "tests/test_kv_validators_comprehensive.py::TestValidateMetricEvent::test_valid_metric_event_string_timestamp",
  "tests/test_kv_validators_comprehensive.py::TestValidateMetricEvent::test_valid_numeric_values",
  "tests/test_kv_validators_comprehensive.py::TestValidateRedisKey::test_boundary_control_characters",
  "tests/test_kv_validators_comprehensive.py::TestValidateRedisKey::test_control_characters",
  "tests/test_kv_validators_comprehensive.py::TestValidateRedisKey::test_empty_key",
  "tests/test_kv_validators_comprehensive.py::TestValidateRedisKey::test_key_length_limit",
  "tests/test_kv_validators_comprehensive.py::TestValidateRedisKey::test_non_string_keys",
  "tests/test_kv_validators_comprehensive.py::TestValidateRedisKey::test_unicode_keys",
  "tests/test_kv_validators_comprehensive.py::TestValidateRedisKey::test_valid_redis_keys",
  "tests/test_kv_validators_comprehensive.py::TestValidateSessionData::test_circular_reference_data",
  "tests/test_kv_validators_comprehensive.py::TestValidateSessionData::test_exactly_size_limit",
  "tests/test_kv_validators_comprehensive.py::TestValidateSessionData::test_nested_data_size",
  "tests/test_kv_validators_comprehensive.py::TestValidateSessionData::test_non_dict_session_data",
  "tests/test_kv_validators_comprehensive.py::TestValidateSessionData::test_non_serializable_data",
  "tests/test_kv_validators_comprehensive.py::TestValidateSessionData::test_session_data_size_limit",
  "tests/test_kv_validators_comprehensive.py::TestValidateSessionData::test_valid_session_data",
  "tests/test_kv_validators_comprehensive.py::TestValidateTimeRange::test_custom_max_days",
  "tests/test_kv_validators_comprehensive.py::TestValidateTimeRange::test_exactly_max_days",
  "tests/test_kv_validators_comprehensive.py::TestValidateTimeRange::test_future_end_date",
  "tests/test_kv_validators_comprehensive.py::TestValidateTimeRange::test_range_exceeds_max_days",
  "tests/test_kv_validators_comprehensive.py::TestValidateTimeRange::test_start_after_end",
  "tests/test_kv_validators_comprehensive.py::TestValidateTimeRange::test_start_equals_end",
  "tests/test_kv_validators_comprehensive.py::TestValidateTimeRange::test_valid_time_range",
  "tests/test_kv_validators_comprehensive.py::TestValidateTimeRange::test_within_max_days",
  "tests/test_metadata_validation.py::TestConfigurationMetadataValidation::test_agent_config_metadata",
  "tests/test_metadata_validation.py::TestConfigurationMetadataValidation::test_connection_metadata_validation",
  "tests/test_metadata_validation.py::TestConfigurationMetadataValidation::test_system_config_metadata",
  "tests/test_metadata_validation.py::TestDataIntegrityValidation::test_checksum_validation",
  "tests/test_metadata_validation.py::TestDataIntegrityValidation::test_data_size_validation",
  "tests/test_metadata_validation.py::TestDataIntegrityValidation::test_metadata_completeness_validation",
  "tests/test_metadata_validation.py::TestDataIntegrityValidation::test_reference_integrity_validation",
  "tests/test_metadata_validation.py::TestDataIntegrityValidation::test_schema_version_validation",
  "tests/test_metadata_validation.py::TestDocumentMetadataValidation::test_decision_metadata_validation",
  "tests/test_metadata_validation.py::TestDocumentMetadataValidation::test_metadata_tag_validation",
  "tests/test_metadata_validation.py::TestDocumentMetadataValidation::test_metadata_timestamp_validation",
  "tests/test_metadata_validation.py::TestDocumentMetadataValidation::test_sprint_metadata_validation",
  "tests/test_metadata_validation.py::TestDocumentMetadataValidation::test_trace_metadata_validation",
  "tests/test_metadata_validation.py::TestDocumentMetadataValidation::test_valid_document_metadata",
  "tests/test_metadata_validation.py::TestMetricMetadataValidation::test_metric_aggregation_metadata",
  "tests/test_metadata_validation.py::TestMetricMetadataValidation::test_metric_metadata_structure",
  "tests/test_migrate_workflow.py::TestWorkflowMigrator::test_add_verifier_pattern",
  "tests/test_migrate_workflow.py::TestWorkflowMigrator::test_create_verifier_action",
  "tests/test_migrate_workflow.py::TestWorkflowMigrator::test_identify_ci_jobs",
  "tests/test_migrate_workflow.py::TestWorkflowMigrator::test_init",
  "tests/test_migrate_workflow.py::TestWorkflowMigrator::test_migrate_workflow_actual",
  "tests/test_migrate_workflow.py::TestWorkflowMigrator::test_migrate_workflow_already_migrated",
  "tests/test_migrate_workflow.py::TestWorkflowMigrator::test_migrate_workflow_dry_run",
  "tests/test_migrate_workflow.py::TestWorkflowMigrator::test_parse_workflow",
  "tests/test_performance_benchmarks.py::TestCriticalPathPerformance::test_agent_execution_performance",
  "tests/test_performance_benchmarks.py::TestCriticalPathPerformance::test_document_processing_pipeline",
  "tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_batch_processing_performance",
  "tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_cache_operations_performance",
  "tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_file_operations_performance",
  "tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_hash_computation_performance",
  "tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_search_performance",
  "tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_validation_performance",
  "tests/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_yaml_parsing_performance",
  "tests/test_performance_benchmarks.py::TestPerformanceRegression::test_performance_baselines",
  "tests/test_pr_conflict_detection.py::TestPRConflictDetection::test_auto_merge_decision_logic",
  "tests/test_pr_conflict_detection.py::TestPRConflictDetection::test_branch_status_evaluation",
  "tests/test_pr_conflict_detection.py::TestPRConflictDetection::test_conflict_comment_generation",
  "tests/test_pr_conflict_detection.py::TestPRConflictDetection::test_github_mergeable_states",
  "tests/test_pr_conflict_detection.py::TestPRConflictDetection::test_integration_full_conflict_workflow",
  "tests/test_pr_conflict_detection.py::TestPRConflictDetection::test_merge_simulation_logic",
  "tests/test_pr_conflict_detection.py::TestPRConflictDetection::test_pr_status_api_parsing",
  "tests/test_pr_simulation.py::TestPRSimulation::test_arc_reviewer_integration",
  "tests/test_pr_simulation.py::TestPRSimulation::test_coverage_config_loading",
  "tests/test_pr_simulation.py::TestPRSimulation::test_helpers_exists_and_executable",
  "tests/test_pr_simulation.py::TestPRSimulation::test_json_conversion",
  "tests/test_pr_simulation.py::TestPRSimulation::test_mock_environment_variables",
  "tests/test_pr_simulation.py::TestPRSimulation::test_mock_pr_number_generation",
  "tests/test_pr_simulation.py::TestPRSimulation::test_script_exists_and_executable",
  "tests/test_pr_simulation.py::TestPRSimulation::test_script_help_option",
  "tests/test_pr_simulation.py::TestPRSimulation::test_script_validates_prerequisites",
  "tests/test_pr_simulation.py::TestPRSimulation::test_simulation_metadata_structure",
  "tests/test_pr_simulation.py::TestPRSimulation::test_yaml_output_format_valid",
  "tests/test_pr_simulation.py::TestPRSimulationIntegration::test_arc_reviewer_command_line",
  "tests/test_pr_simulation.py::TestPRSimulationIntegration::test_coverage_command_availability",
  "tests/test_pr_simulation.py::TestPRSimulationIntegration::test_git_repository_detection",
  "tests/test_pr_simulation.py::TestPRSimulationIntegration::test_pytest_availability",
  "tests/test_pr_simulation_yaml_format.py::TestPRSimulationYAMLFormat::test_arc_reviewer_yaml_format_structure",
  "tests/test_pr_simulation_yaml_format.py::TestPRSimulationYAMLFormat::test_simulate_pr_review_script_exists",
  "tests/test_pr_simulation_yaml_format.py::TestPRSimulationYAMLFormat::test_yaml_format_documentation_consistency",
  "tests/test_pr_simulation_yaml_format.py::TestPRSimulationYAMLFormat::test_yaml_output_format_consistency",
  "tests/test_property_based.py::TestPropertyBasedDocumentStructures::test_document_metadata_structure",
  "tests/test_property_based.py::TestPropertyBasedDocumentStructures::test_yaml_document_properties",
  "tests/test_property_based.py::TestPropertyBasedHashing::test_content_hash_properties",
  "tests/test_property_based.py::TestPropertyBasedHashing::test_embedding_hash_properties",
  "tests/test_property_based.py::TestPropertyBasedMetrics::test_metric_event_properties",
  "tests/test_property_based.py::TestPropertyBasedValidation::test_cache_entry_validation_properties",
  "tests/test_property_based.py::TestPropertyBasedValidation::test_metric_name_sanitization_properties",
  "tests/test_property_based.py::TestPropertyBasedValidation::test_redis_key_validation_properties",
  "tests/test_property_based.py::TestPropertyBasedValidation::test_session_data_validation_properties",
  "tests/test_property_based.py::TestPropertyBasedValidation::test_time_range_validation_properties",
  "tests/test_reproducibility.py::TestReproducibility::test_audit_checkpoint_creation",
  "tests/test_reproducibility.py::TestReproducibility::test_diff_based_reproduction",
  "tests/test_reproducibility.py::TestReproducibility::test_document_hash_deterministic",
  "tests/test_reproducibility.py::TestReproducibility::test_graph_state_reproducibility",
  "tests/test_reproducibility.py::TestReproducibility::test_incremental_hash_tracking",
  "tests/test_reproducibility.py::TestReproducibility::test_kv_store_state_backup_restore",
  "tests/test_reproducibility.py::TestReproducibility::test_state_reproduction_from_snapshot",
  "tests/test_reproducibility.py::TestReproducibility::test_state_snapshot_creation",
  "tests/test_security.py::TestAuthenticationSecurity::test_no_default_passwords",
  "tests/test_security.py::TestAuthenticationSecurity::test_password_not_logged",
  "tests/test_security.py::TestInjectionPrevention::test_cypher_injection_prevention",
  "tests/test_security.py::TestInjectionPrevention::test_path_traversal_prevention",
  "tests/test_security.py::TestInputValidation::test_sprint_number_validation",
  "tests/test_security.py::TestInputValidation::test_yaml_path_validation",
  "tests/test_security.py::TestPasswordSanitization::test_sanitize_error_message_basic",
  "tests/test_security.py::TestPasswordSanitization::test_sanitize_error_message_encoded",
  "tests/test_security.py::TestPasswordSanitization::test_sanitize_error_message_headers",
  "tests/test_security.py::TestPasswordSanitization::test_sanitize_error_message_short_values",
  "tests/test_security.py::TestPasswordSanitization::test_sanitize_error_message_url",
  "tests/test_security.py::TestSSLConfiguration::test_ssl_certificate_paths",
  "tests/test_security.py::TestSSLConfiguration::test_ssl_config_loading",
  "tests/test_sigstore_verification.py::TestSigstoreIntegration::test_document_signing",
  "tests/test_sigstore_verification.py::TestSigstoreIntegration::test_document_verification",
  "tests/test_sigstore_verification.py::TestSigstoreIntegration::test_signature_bundle_creation",
  "tests/test_sigstore_verification.py::TestSigstoreIntegration::test_signature_expiration",
  "tests/test_sigstore_verification.py::TestSigstoreIntegration::test_tampered_document_detection",
  "tests/test_sigstore_verification.py::TestSigstoreRecovery::test_missing_signature_handling",
  "tests/test_sigstore_verification.py::TestSigstoreRecovery::test_signature_chain_validation",
  "tests/test_sigstore_verification.py::TestSigstoreWorkflow::test_ci_signing_workflow",
  "tests/test_sigstore_verification.py::TestSigstoreWorkflow::test_signature_metadata",
  "tests/test_sigstore_verification.py::TestSigstoreWorkflow::test_transparency_log_verification",
  "tests/test_sigstore_verification.py::TestSigstoreWorkflow::test_verification_policy",
  "tests/test_sprint_automation.py::TestSprintIssueLinker::test_create_issues_dry_run",
  "tests/test_sprint_automation.py::TestSprintIssueLinker::test_issue_title_generation",
  "tests/test_sprint_automation.py::TestSprintUpdater::test_create_next_sprint",
  "tests/test_sprint_automation.py::TestSprintUpdater::test_find_active_sprint",
  "tests/test_sprint_automation.py::TestSprintUpdater::test_sprint_status_progression",
  "tests/test_sprint_automation.py::TestSprintUpdater::test_task_matching_logic",
  "tests/test_sprint_automation.py::TestSprintUpdater::test_update_phase_status",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerBidirectionalSync::test_calculate_task_labels",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerBidirectionalSync::test_close_orphaned_issue",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerBidirectionalSync::test_find_orphaned_issues",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerBidirectionalSync::test_get_current_issue_state_failure",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerBidirectionalSync::test_get_current_issue_state_success",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerBidirectionalSync::test_sync_issue_labels_no_changes",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerBidirectionalSync::test_update_issue_state_close",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerBidirectionalSync::test_update_issue_state_invalid",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_check_gh_cli",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_cli_command_sync",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_cli_command_update_labels",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_cli_command_with_sprint_id",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_create_issue_dry_run",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_create_issue_failure",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_create_issue_success",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_create_issue_with_sanitization",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_create_issues_from_sprint",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_create_issues_from_sprint_no_gh",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_create_issues_no_sprint_file",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_find_task_in_issues",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_get_existing_issues_failure",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_get_existing_issues_no_gh",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_get_existing_issues_success",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_get_sprint_file",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_get_sprint_file_not_found",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_init_with_config",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_init_without_gh_cli",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_sanitize_text_security",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_sync_sprint_with_issues_basic",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_sync_sprint_with_issues_dry_run",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_sync_sprint_with_issues_no_file",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_sync_with_malicious_api_response",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_update_sprint_labels",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_validate_issue_number_security",
  "tests/test_sprint_issue_linker_coverage.py::TestSprintIssueLinkerCoverage::test_validate_label_security",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_auto_merge_configuration",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_cancellation_step_exists",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_concurrency_control_configured",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_create_pr_step_configured",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_duplicate_detection_logic_active_runs",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_duplicate_detection_logic_recent_success",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_duplicate_detection_step_exists",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_environment_variables_secure",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_github_token_configured",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_issue_closing_logic_exists",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_permissions_properly_configured",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_trigger_events_configured",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_workflow_file_exists",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_workflow_robustness",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_workflow_syntax_valid",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateDuplicatePrevention::test_workflow_timeout_configured",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateIntegration::test_legacy_text_parsing_fallback",
  "tests/test_sprint_update_duplicate_prevention.py::TestSprintUpdateIntegration::test_yaml_frontmatter_parsing_logic",
  "tests/test_traceability_matrix.py::TestTraceabilityMatrix::test_all_critical_functions_have_tests",
  "tests/test_traceability_matrix.py::TestTraceabilityMatrix::test_all_requirements_covered",
  "tests/test_traceability_matrix.py::TestTraceabilityMatrix::test_generate_traceability_report",
  "tests/test_traceability_matrix.py::TestTraceabilityMatrix::test_test_case_naming_convention",
  "tests/test_traceability_matrix.py::test_example_with_requirement_mapping",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_check_gh_cli",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_cli_command",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_create_next_sprint",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_error_handling_in_update",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_generate_report",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_get_current_sprint",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_get_current_sprint_auto",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_get_github_issues_failure",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_get_github_issues_no_gh_cli",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_get_github_issues_success",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_init_with_github_config",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_init_without_config",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_match_task_to_issue",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_update_phase_status",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_update_sprint_full_workflow",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_update_sprint_status",
  "tests/test_update_sprint_coverage.py::TestUpdateSprintAgentCoverage::test_update_timestamps",
  "tests/test_vector_db.py::TestHashDiffEmbedder::test_compute_content_hash",
  "tests/test_vector_db.py::TestHashDiffEmbedder::test_embed_document",
  "tests/test_vector_db.py::TestHashDiffEmbedder::test_needs_embedding",
  "tests/test_vector_db.py::TestSumScoresAPI::test_calculate_temporal_decay",
  "tests/test_vector_db.py::TestSumScoresAPI::test_calculate_temporal_decay_invalid_date",
  "tests/test_vector_db.py::TestSumScoresAPI::test_calculate_temporal_decay_iso_format",
  "tests/test_vector_db.py::TestSumScoresAPI::test_connect_failure",
  "tests/test_vector_db.py::TestSumScoresAPI::test_connect_success",
  "tests/test_vector_db.py::TestSumScoresAPI::test_get_statistics_error",
  "tests/test_vector_db.py::TestSumScoresAPI::test_get_statistics_large_collection",
  "tests/test_vector_db.py::TestSumScoresAPI::test_get_statistics_small_collection",
  "tests/test_vector_db.py::TestSumScoresAPI::test_get_type_boost",
  "tests/test_vector_db.py::TestSumScoresAPI::test_load_config_file_not_found",
  "tests/test_vector_db.py::TestSumScoresAPI::test_load_perf_config_file_not_found",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_command_connection_failure",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_command_json_format",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_command_table_format",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_contextual",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_contextual_no_context_vectors",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_contextual_with_exception",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_multi_aggregation",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_multi_avg_aggregation",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_multi_max_aggregation",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_multi_sum_aggregation",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_result_dataclass",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_single",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_single_empty_payload_fields",
  "tests/test_vector_db.py::TestSumScoresAPI::test_search_single_with_filters",
  "tests/test_vector_db.py::TestSumScoresAPI::test_stats_command",
  "tests/test_vector_db.py::TestSumScoresAPI::test_stats_command_connection_failure",
  "tests/test_vector_db.py::TestVectorDBInitializer::test_connect_failure",
  "tests/test_vector_db.py::TestVectorDBInitializer::test_connect_success",
  "tests/test_vector_db.py::TestVectorDBInitializer::test_create_collection",
  "tests/test_vector_db.py::TestVectorDBInitializer::test_load_config",
  "tests/test_vector_db_init.py::TestCLI::test_main_collection_creation_failure",
  "tests/test_vector_db_init.py::TestCLI::test_main_connection_failure",
  "tests/test_vector_db_init.py::TestCLI::test_main_skip_test",
  "tests/test_vector_db_init.py::TestCLI::test_main_success",
  "tests/test_vector_db_init.py::TestCLI::test_main_test_point_failure",
  "tests/test_vector_db_init.py::TestCLI::test_main_verification_failure",
  "tests/test_vector_db_init.py::TestCLI::test_main_with_force",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_connect_client_none",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_connect_exception",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_connect_no_ssl",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_connect_with_ssl",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_create_collection_already_exists_no_force",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_create_collection_already_exists_with_force",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_create_collection_exception",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_create_collection_new",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_create_collection_not_connected",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_insert_test_point_exception",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_insert_test_point_not_connected",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_insert_test_point_search_verification_fail",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_insert_test_point_success",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_load_config_file_not_found",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_load_config_invalid_yaml",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_load_config_not_dict",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_load_config_success",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_verify_setup_exception",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_verify_setup_named_vectors",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_verify_setup_not_connected",
  "tests/test_vector_db_init.py::TestVectorDBInitializer::test_verify_setup_success",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_config_fallback_values",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_connect_client_none",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_connect_default_port",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_connect_failure",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_connect_ssl_verify_disabled",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_connect_success_no_ssl",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_connect_success_with_ssl",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_create_collection_already_exists_no_force",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_create_collection_default_name",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_create_collection_exception",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_create_collection_force_recreate",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_create_collection_new",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_create_collection_no_client",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_init_with_custom_config_path",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_init_with_default_config",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_insert_test_point_exception",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_insert_test_point_no_client",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_insert_test_point_no_results",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_insert_test_point_success",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_insert_test_point_verification_failed",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_load_config_file_not_found",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_load_config_invalid_yaml",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_load_config_non_dict_content",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_load_config_success",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_verify_setup_dict_vectors",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_verify_setup_exception",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_verify_setup_no_client",
  "tests/test_vector_db_init_comprehensive.py::TestVectorDBInitializer::test_verify_setup_success_vector_params",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_arc_reviewer_integration",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_auto_merge_detection_methods",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_backward_compatibility",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_ci_status_monitoring",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_conflict_resolution_capabilities",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_consolidation_benefits",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_end_to_end_workflow_simulation",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_error_handling_and_notifications",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_github_api_integration",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_legacy_workflow_feature_coverage",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_monitoring_and_observability",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_new_workflow_syntax_valid",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_performance_optimizations",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_permissions_scope",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_trigger_event_coverage",
  "tests/test_workflow_feature_parity.py::TestWorkflowFeatureParity::test_workflow_files_exist"
]