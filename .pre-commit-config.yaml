---
# Updated pre-commit configuration that matches CI but is practical
repos:
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3.11
        exclude: tests/test_formatting_issues\.py

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-PyYAML, types-redis, types-requests]
        args: [--config-file=mypy.ini, --ignore-missing-imports]
        files: ^src/
        # Only check src/ files for now, tests need more work

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        exclude: |
          (?x)^(
            context/schemas/.*\.yaml|
            \.github/workflows/arc-follow-up-processor\.yml
          )$
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-json
      - id: debug-statements
      - id: mixed-line-ending

  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: ["--profile", "black"]

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=100', '--extend-ignore=E203,W503']
        # Run on all Python files like CI does

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        name: yamllint (general)
        args: [--format, parsable, --strict]
        files: \.(yaml|yml)$
        exclude: ^(\.github/workflows/|workflows/|\.pre-commit-config.*\.yaml|context/sprints/sprint-4\.1\.yaml)
      - id: yamllint
        name: yamllint (workflows)
        args: [--format, parsable, -c, .yamllint-workflows.yml]
        files: ^\.github/workflows/.*\.ya?ml$
        exclude: ^\.github/workflows/arc-follow-up-processor\.yml$

  - repo: local
    hooks:
      - id: context-lint
        name: Context YAML Lint
        entry: python -m src.agents.context_lint validate context/
        language: system
        files: ^context/.*\.yaml$
        pass_filenames: false

      - id: test-imports
        name: Check Test Module Imports
        entry: python -m pytest --collect-only -q
        language: system
        files: ^tests/.*\.py$
        pass_filenames: false

      - id: generate-coverage-matrix
        name: Generate Coverage Matrix
        entry: python scripts/generate_coverage_matrix.py
        language: system
        pass_filenames: false
        stages: [manual]

      - id: check-pr-keywords
        name: Check PR Keywords
        entry: ./scripts/check-pr-keywords.sh
        language: script
        always_run: true
        pass_filenames: false
        stages: [commit-msg]
