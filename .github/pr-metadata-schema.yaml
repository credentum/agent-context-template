---
# Schema for machine-readable PR metadata
# Used to validate the YAML frontmatter in pull request descriptions

$schema: "http://json-schema.org/draft-07/schema#"
title: "Pull Request Metadata Schema"
description: "Schema for validating machine-readable metadata in PRs"
type: object

required:
  - pr_metadata

properties:
  pr_metadata:
    type: object
    required:
      - type
      - closes_issues
      - breaking_change
    properties:
      type:
        enum: ["feature", "fix", "docs", "refactor", "test", "chore"]
        description: "Type of change being made"

      closes_issues:
        type: array
        items:
          type: integer
          minimum: 1
        description: "List of GitHub issue numbers this PR closes"
        default: []

      priority:
        enum: ["high", "medium", "low"]
        description: "Priority level of this change"
        default: "medium"

      breaking_change:
        type: boolean
        description: "Whether this is a breaking change"
        default: false

      affects_components:
        type: array
        items:
          type: string
          enum: ["workflow", "automation", "core", "storage", "agents",
                 "analytics", "validators", "docs", "infra", "ci"]
        description: "List of components affected by this change"
        default: []

      test_coverage:
        type: object
        description: "Information about test coverage"
        properties:
          added:
            type: boolean
            description: "Whether tests were added"
            default: false
          percentage:
            type: number
            minimum: 0
            maximum: 100
            description: "Test coverage percentage"
          requirements_met:
            type: boolean
            description: "Whether coverage requirements are met"
            default: false
        default: {}

      risk_assessment:
        enum: ["low", "medium", "high"]
        description: "Risk level of this change"
        default: "low"

      review_requirements:
        type: object
        description: "Special review requirements"
        properties:
          security_review:
            type: boolean
            description: "Requires security review"
            default: false
          architecture_review:
            type: boolean
            description: "Requires architecture review"
            default: false
        default: {}

      automation_flags:
        type: object
        description: "Flags for automation workflows"
        properties:
          auto_merge:
            type: boolean
            description: "Enable auto-merge when conditions are met"
            default: false
          skip_ci:
            type: boolean
            description: "Skip CI checks (documentation only changes)"
            default: false
          update_docs:
            type: boolean
            description: "Automatically update documentation"
            default: false
        default: {}

# Examples of valid metadata
examples:
  - pr_metadata:
      type: "feature"
      closes_issues: [150]
      priority: "high"
      breaking_change: false
      affects_components: ["workflow", "automation"]
      test_coverage:
        added: true
        percentage: 85.5
        requirements_met: true
      risk_assessment: "medium"
      review_requirements:
        architecture_review: true
      automation_flags:
        auto_merge: true

  - pr_metadata:
      type: "fix"
      closes_issues: [123, 456]
      priority: "high"
      breaking_change: false
      affects_components: ["core"]
      risk_assessment: "low"
      automation_flags:
        auto_merge: false

  - pr_metadata:
      type: "docs"
      closes_issues: []
      priority: "low"
      breaking_change: false
      affects_components: ["docs"]
      risk_assessment: "low"
      automation_flags:
        skip_ci: true
        update_docs: true
