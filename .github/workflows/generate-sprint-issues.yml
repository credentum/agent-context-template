name: Generate Sprint Issues

on:
  # Manual trigger for specific sprints
  workflow_dispatch:
    inputs:
      sprint_id:
        description: 'Sprint ID (e.g., sprint-5.1)'
        required: true
        type: string
      dry_run:
        description: 'Dry run (preview only)'
        required: false
        type: boolean
        default: false

  # Automatic trigger when sprint files are created/modified
  push:
    paths:
      - 'context/sprints/sprint-*.yaml'
    branches:
      - main
      - 'feature/**'
      - 'fix/**'

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Need previous commit to detect changes

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install click pyyaml

    - name: Generate issues (Manual)
      if: github.event_name == 'workflow_dispatch'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
          python -m src.agents.sprint_issue_linker create --sprint ${{ github.event.inputs.sprint_id }} --dry-run --verbose
        else
          python -m src.agents.sprint_issue_linker create --sprint ${{ github.event.inputs.sprint_id }} --verbose
        fi

    - name: Generate issues (Auto)
      if: github.event_name == 'push'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Checking for modified sprint files..."

        # Check for modified sprint files
        git diff --name-only HEAD~1 HEAD | grep 'context/sprints/sprint-.*\.yaml' | while read file; do
          if [ -f "$file" ]; then
            sprint_id=$(basename "$file" .yaml)
            echo "Checking sprint file: $sprint_id"

            # Only generate if sprint is in planning or in_progress
            status=$(python -c "import yaml; f=open('$file'); data=yaml.safe_load(f); f.close(); print(data.get('status', 'unknown'))")

            if [ "$status" = "planning" ] || [ "$status" = "in_progress" ]; then
              echo "Auto-generating issues for $sprint_id (status: $status)"
              python -m src.agents.sprint_issue_linker create --sprint "$sprint_id" --verbose
            else
              echo "Skipping $sprint_id (status: $status)"
            fi
          fi
        done

    - name: Update sprint files with issue numbers
      if: github.event_name == 'push'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Check if any sprint files were updated with issue numbers
        if git diff --name-only | grep -q 'context/sprints/sprint-.*\.yaml'; then
          echo "Sprint files updated with issue numbers, creating PR..."

          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Create branch for sprint updates
          branch_name="auto/sprint-issues-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$branch_name"

          # Commit changes
          git add context/sprints/sprint-*.yaml
          git commit -m "feat(sprint): add GitHub issue numbers to sprint files

Generated by automatic issue creation workflow.

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>"

          # Push branch
          git push origin "$branch_name"

          # Create PR
          gh pr create \
            --title "Auto-generated: Update sprint files with GitHub issue numbers" \
            --body "$(cat <<'EOF'
## Summary
- Automatically updated sprint YAML files with GitHub issue numbers
- Created by issue generation workflow

## Changes
- Added `github_issue` fields to tasks in sprint files
- Links sprint tasks to their corresponding GitHub issues

## Automation
This PR was created automatically when new GitHub issues were generated from sprint tasks.

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)
EOF
)" \
            --label "sprint-automation" \
            --label "auto-merge"

          echo "Created PR for sprint file updates"
        else
          echo "No sprint files updated"
        fi
