name: Sprint Update

on:
  issues:
    types: [opened, closed, reopened, labeled, unlabeled]
  pull_request:
    types: [closed]
  schedule:
    - cron: '0 9 * * 1-5'  # 9 AM UTC on weekdays
  workflow_dispatch:
    inputs:
      sprint_id:
        description: 'Specific sprint ID to update'
        required: false

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    permissions:
      contents: write
      issues: read
      pull-requests: read
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install click pyyaml
    
    - name: Update sprint document
      id: update
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -e  # Exit on error
        if [ -n "${{ github.event.inputs.sprint_id }}" ]; then
          python update_sprint.py update --sprint "${{ github.event.inputs.sprint_id }}" --verbose
        else
          python update_sprint.py update --verbose
        fi
        echo "update_status=$?" >> $GITHUB_OUTPUT
    
    - name: Generate sprint report
      if: success()
      run: |
        python update_sprint.py report --verbose > sprint_report.md
        cat sprint_report.md
    
    - name: Commit changes
      if: success()
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git add context/sprints/*.yaml
          EVENT_NAME=$(echo "${{ github.event_name }}" | tr -cd '[:alnum:]_-')
          git commit -m "chore: update sprint status via automation
          
          Updated based on issue/PR activity
          Triggered by: ${EVENT_NAME}
          
          Co-Authored-By: github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          
          git push
        fi
    
    - name: Create issue comment with report
      if: github.event_name == 'issues' && success()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('sprint_report.md', 'utf8');
          
          // Only comment on sprint-labeled issues
          const labels = context.payload.issue.labels.map(l => l.name);
          if (labels.some(l => l.startsWith('sprint-'))) {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## Sprint Status Update\n\n${report}\n\n_This comment was automatically generated by the sprint update workflow._`
            });
          }