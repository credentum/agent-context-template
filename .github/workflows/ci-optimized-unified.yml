---
###############################################################################
# 🚀 Optimized CI Pipeline (Unified) - Uses Claude CI Scripts
# Replaces the 802-line ci-optimized.yml with claude-ci script delegation
# Maintains same performance characteristics with simplified implementation
# Issue #1063: Align GitHub Actions with Claude Local CI
###############################################################################
name: CI Optimized (Unified)

on:
  # Temporarily disabled while in migration - enable after testing
  # push:
  #   branches: [main, 'phase-*', 'feature-*', develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write
  statuses: write

env:
  # Keep same versioning as original
  CACHE_VERSION: "v2025-07-22-unified"
  PYTHON_VERSION: "3.11"

# Same job structure as original but delegating to claude-ci
jobs:
  # Detect changes for conditional execution (preserved from original)
  detect-changes:
    name: "🔍 Detect Changes"
    runs-on: ubuntu-latest
    outputs:
      src-changed: ${{ steps.changes.outputs.src }}
      tests-changed: ${{ steps.changes.outputs.tests }}
      config-changed: ${{ steps.changes.outputs.config }}
      docs-only: ${{ steps.changes.outputs.docs-only }}
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871b0ad9019b8ad7c6f7e9a0556
        with:
          fetch-depth: 2

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: changes
        with:
          filters: |
            src:
              - 'src/**'
            tests:
              - 'tests/**'
            config:
              - '*.toml'
              - '*.ini'
              - 'requirements*.txt'
              - '.pre-commit-config.yaml'
            docs-only:
              - '*.md'
              - 'docs/**'
              - 'context/design/**'

  # Shared setup (preserved but simplified)
  setup:
    name: "⚙️ Setup Environment"
    runs-on: ubuntu-latest
    needs: detect-changes
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871b0ad9019b8ad7c6f7e9a0556

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python dependencies
        id: cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-${{ env.CACHE_VERSION }}-${{ hashFiles('requirements*.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -r requirements-test.txt

      - name: Create context directories
        run: |
          mkdir -p context/{.duckdb,.graph_cache,.vector_cache,.embeddings_cache,trace,archive,mcp_contracts}
          mkdir -p context/logs/{cleanup,eval,kv,prompts,signatures}
          mkdir -p .claude/hooks

  # Replace complex lint matrix with single claude-ci call
  lint-unified:
    name: "🔍 Lint & Style (Unified)"
    runs-on: ubuntu-latest
    needs: [detect-changes, setup]
    if: |
      needs.detect-changes.outputs.src-changed == 'true' ||
      needs.detect-changes.outputs.tests-changed == 'true' ||
      needs.detect-changes.outputs.config-changed == 'true'
    outputs:
      status: ${{ steps.lint.outputs.status }}
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871b0ad9019b8ad7c6f7e9a0556

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python dependencies
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-${{ env.CACHE_VERSION }}-${{ hashFiles('requirements*.txt', 'pyproject.toml') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -r requirements-test.txt

      - name: Restore context directories
        run: |
          mkdir -p context/{.duckdb,.graph_cache,.vector_cache,.embeddings_cache,trace,archive,mcp_contracts}
          mkdir -p context/logs/{cleanup,eval,kv,prompts,signatures}
          mkdir -p .claude/hooks

      # Replace entire lint matrix (black, isort, flake8, mypy, context-lint) with single command
      - name: Run Pre-commit Checks (All Linting)
        id: lint
        run: |
          echo "🚀 Running claude-ci pre-commit (replaces black, isort, flake8, mypy, context-lint)"
          ./scripts/claude-ci.sh pre-commit --github-output

  # Replace complex test suite with single claude-ci call
  test-unified:
    name: "🧪 Tests (Unified)"
    runs-on: ubuntu-latest
    needs: [detect-changes, setup]
    if: needs.detect-changes.outputs.src-changed == 'true' || needs.detect-changes.outputs.tests-changed == 'true'

    services:
      redis:
        image: redis@sha256:af1d0fc3f63b02b13ff7906c9baf7c5b390b8881ca08119cd570677fe2f60b55
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    outputs:
      status: ${{ steps.test.outputs.status }}
      coverage: ${{ steps.test.outputs.coverage-pct }}
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871b0ad9019b8ad7c6f7e9a0556

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python dependencies
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-${{ env.CACHE_VERSION }}-${{ hashFiles('requirements*.txt', 'pyproject.toml') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -r requirements-test.txt

      - name: Restore context directories
        run: |
          mkdir -p context/{.duckdb,.graph_cache,.vector_cache,.embeddings_cache,trace,archive,mcp_contracts}
          mkdir -p context/logs/{cleanup,eval,kv,prompts,signatures}
          mkdir -p .claude/hooks

      # Replace unit tests, integration tests, coverage analysis with single command
      - name: Run Tests with Coverage
        id: test
        run: |
          echo "🚀 Running claude-ci test (includes unit, integration, coverage)"
          ./scripts/claude-ci.sh test --all --github-output

      - name: Upload test artifacts
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029
        if: always()
        with:
          name: unified-test-results
          path: |
            test-results/
            coverage*.xml
            coverage.json
            htmlcov/

  # Optional comprehensive testing for high-priority changes
  comprehensive-validation:
    name: "🔬 Comprehensive Validation"
    runs-on: ubuntu-latest
    needs: [setup, lint-unified, test-unified]
    if: |
      github.event_name == 'pull_request' &&
      (contains(github.event.pull_request.labels.*.name, 'priority-high') ||
       contains(github.event.pull_request.labels.*.name, 'breaking-change'))

    services:
      redis:
        image: redis@sha256:af1d0fc3f63b02b13ff7906c9baf7c5b390b8881ca08119cd570677fe2f60b55
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871b0ad9019b8ad7c6f7e9a0556

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python dependencies
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-${{ env.CACHE_VERSION }}-${{ hashFiles('requirements*.txt', 'pyproject.toml') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -r requirements-test.txt
          pip install locust==2.31.7 mutmut  # For comprehensive testing

      - name: Restore context directories
        run: |
          mkdir -p context/{.duckdb,.graph_cache,.vector_cache,.embeddings_cache,trace,archive,mcp_contracts}
          mkdir -p context/logs/{cleanup,eval,kv,prompts,signatures}
          mkdir -p .claude/hooks

      # Replace performance tests, mutation tests, full review with single command
      - name: Run Comprehensive Validation
        run: |
          echo "🚀 Running claude-ci all --comprehensive (includes performance, mutation, review)"
          ./scripts/claude-ci.sh all --comprehensive --github-output

  # Simplified summary (maintains same interface as original)
  ci-summary:
    name: "📋 CI Summary (Unified)"
    runs-on: ubuntu-latest
    needs: [lint-unified, test-unified, comprehensive-validation]
    if: always()

    steps:
      - name: Generate Unified CI Summary
        run: |
          echo "## 🚀 CI Optimized Pipeline (Unified) Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          lint_status="${{ needs.lint-unified.result }}"
          test_status="${{ needs.test-unified.result }}"
          comp_status="${{ needs.comprehensive-validation.result }}"

          get_emoji() {
            case $1 in
              "success") echo "✅" ;;
              "failure") echo "❌" ;;
              "cancelled") echo "⏸️" ;;
              "skipped") echo "⏭️" ;;
              *) echo "❓" ;;
            esac
          }

          echo "| Stage | Status | Claude Command | Original Replacement |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|----------------|---------------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint & Style | $(get_emoji "$lint_status") | \`claude-ci pre-commit\` | black, isort, flake8, mypy, context-lint |" >> $GITHUB_STEP_SUMMARY
          echo "| Tests | $(get_emoji "$test_status") | \`claude-ci test --all\` | Unit, integration, coverage analysis |" >> $GITHUB_STEP_SUMMARY
          echo "| Comprehensive | $(get_emoji "$comp_status") | \`claude-ci all --comprehensive\` | Performance, mutation, review |" >> $GITHUB_STEP_SUMMARY

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Unified Benefits (Issue #1063):**" >> $GITHUB_STEP_SUMMARY
          echo "- 🎯 **90% YAML reduction**: 802 lines → ~150 lines" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ **Identical local behavior**: Same claude-ci commands" >> $GITHUB_STEP_SUMMARY
          echo "- 🔧 **Single source of truth**: CI logic in scripts only" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 **Easier debugging**: Run exact same commands locally" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 **Maintained performance**: Same caching and parallelization" >> $GITHUB_STEP_SUMMARY

          # Determine overall status
          if [[ "$lint_status" == "success" && "$test_status" == "success" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ **Overall Status: PASSED** - All required checks completed"
            exit 0
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "❌ **Overall Status: FAILED** - Some checks need attention"
            exit 1
          fi